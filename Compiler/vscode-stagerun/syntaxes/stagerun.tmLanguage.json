{
  "scopeName": "source.stagerun",
  "patterns": [
    { "include": "#keywords" },
    { "include": "#instructions" },
    { "include": "#numbers" },
    { "include": "#strings" },
    { "include": "#comments" },
    { "include": "#sections" }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "entity.name.type.stagerun", 
          "match": "\\b(PREFILTER|POSFILTER)\\b"
        },
        {
          "name": "entity.name.function.stagerun", 
          "match": "\\b(KEY|DEFAULT|END)\\b"
        },
        {
          "name": "keyword.control.stagerun",
          "match": "(?<!\\.)\\b(MAIN|BODY)\\b|(?<!\\.)\\b(PORT|PIN|POUT|QSET)\\b" 
        }
      ]
    },
    "instructions": {
      "patterns": [
        {
          "name": "keyword.operator.stagerun",
          "match": "\\b(FWD|HINC|DROP)\\b"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.stagerun",
          "match": "\\b[-+]?[0-9]+\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.stagerun",
          "match": "\".*?\""
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line.number-sign.stagerun",
          "match": "#.*$"
        }
      ]
    },
    "sections": {
      "patterns": [
        {
          "name": "entity.name.section.stagerun",
          "match": "\\b[A-Za-z_][A-Za-z0-9_]*\\b(?=\\s*:)"
        }
      ]
    }
  }
}